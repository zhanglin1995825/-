<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans

    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!-- 配置整合mybatis过程 -->
    <!-- 1.配置数据库相关参数properties的属性：${url} -->
    <context:property-placeholder location="classpath:jdbc.properties"/>

<!--2.数据库连接池-->
        <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
            <property name="driverClass" value="${jdbc.driver}"/>
            <property name="jdbcUrl" value="${jdbc.url}"/>
            <property name="user" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>
        </bean>
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--配置连接数据库数据源-->
        <property name="dataSource" ref="dataSource"/>
<!--        <property name="typeAliases" value="com.pojo"/>-->
        <!--配置Mapper文件所在位置-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>
    <context:component-scan base-package="com"/>
    <!--Dao接口所在包名，spring将会扫描basePackage并自动装配-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
<!--    //<bean id="aspect" class="com.controller.Aspect"/>-->
<!--    <aop:aspectj-autoproxy proxy-target-class="true"/>-->
<!--    <bean id="aspect" class="com.controller.LogInterceptor"/>-->
<!--    <aop:config>-->
<!--        <aop:aspect ref="aspect">-->
<!--            <aop:pointcut id="logPointCut" expression="execution(* com.service.impl.*.*(..))"/>-->
<!--            <aop:before pointcut-ref="logPointCut" method="befor"/>-->
<!--            <aop:after pointcut-ref="logPointCut" method="after"/>-->
<!--        </aop:aspect>-->
<!--    </aop:config>-->
</beans>